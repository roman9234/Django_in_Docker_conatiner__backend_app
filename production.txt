Vagrant – консольная утилита, которая управляет виртуальными машинами.
По умолчанию Vagrant работает с системой виртуализации VirtualBox.

Vagrant создает изолированные среды разработки,
при этом не жертвуя привычными инструментами (редакторы, браузеры и т. д.) и оставляя основную систему чистой.

В папке проекта создается файл Vagrantfile с описанием конфигурации виртуальной машины, в котором указывается операционная система,
выделяемые ресурсы, сетевые настройки и скрипты по установке и настройке дополнительных программ.

//Проверка версии
vagrant -v

//Создание Vagrantfile в текущей директории. В нем на языке Ruby описывается конфигурация виртуальной машины
vagrant init

1. vagrant up
   Запускает виртуальную машину, создавая её, если она ещё не существует. Также выполняет все настройки, указанные в Vagrantfile, включая синхронизацию папок, настройку сети, установку зависимостей и т.д.

2. vagrant halt
   Останавливает запущенную виртуальную машину. Это аналог нажатия кнопки "Выключить" в VirtualBox. Виртуальная машина остаётся сохранённой на диске и может быть запущена снова.

3. vagrant reload
   Перезапускает виртуальную машину. Полезно, если вы внесли изменения в Vagrantfile (например, изменили настройки сети или синхронизации) и хотите их применить.

4. vagrant destroy
   Полностью удаляет виртуальную машину вместе со всеми её файлами. После выполнения этой команды машина исчезает из VirtualBox.

5. vagrant suspend
   Сохраняет текущее состояние виртуальной машины и останавливает её. Это аналог функции "Сохранить состояние" в VirtualBox. Позволяет быстро вернуться к работе без полной перезагрузки.

6. vagrant resume
   Возобновляет работу виртуальной машины после выполнения команды vagrant suspend.

7. vagrant ssh
   Подключается к виртуальной машине через SSH. Это позволяет вам работать с машиной из командной строки.

8. vagrant status
   Показывает статус виртуальной машины (например, запущена ли она, остановлена или отсутствует).

9. vagrant box list
   Показывает список всех базовых образов (boxes), которые доступны на вашем компьютере.

10. vagrant box remove <box-name>
    Удаляет базовый образ из локального хранилища.

11. vagrant global-status
    Показывает список всех машин Vagrant, созданных на вашем компьютере (даже если вы находитесь в другой директории).

vagrant box list - список доступных боксов на компьютере
vagrant box add ubuntu/jammy64 - скачать бокс на компьютер
vagrant up --debug - Запуск с подробным отображением ошибок


//Команда vagrant provision выполняет провиженинг (настройку) виртуальной машины.
Это процесс выполнения скриптов или инструкций, которые указаны в Vagrantfile для настройки машины после ее создания.
vagrant provision

--пример:
config.vm.provision "shell", inline: <<-SHELL
    sudo apt update
    sudo apt install -y python3-pip python3-virtualenv postgresql nginx
  SHELL

Для убодства вместо сервера используем Vagrant
---- Запуск на Linux Сервере без Docker ----
Будем использовать:
gunicorn
nginx

//Переходим в нужный нам каталог
cd opt/myapp

//Обновляем сведения о пакетах
sudo apt update

//Устанавливаем pip venv postgres nginx - они нужны для проекта
sudo apt install python3-pip python3-virtualenv postgresql nginx

sudo apt-get update
sudo apt-get install python3-virtualenv

Если пакета нет - статья https://dzen.ru/a/ZQMEyobIzHVBj70y

//Поиск пакета
sudo apt search virtualenv

Создаём виртуальное окружение
virtualenv venv

. ./venv/bin/activate

---- Запуск на Linux Серере через docker-compose ----







