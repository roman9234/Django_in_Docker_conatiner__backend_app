---- Варианты поставки проекта ----

pip package - можно в виде пакета создать целое приложение или программк

.deb package - дистрибутив linux. Позволяет разворачивать проекты

.rpm package - для других систем которые его использут

архив с файлами прокта - можно положить интрукции к установке туда

ссылка на проект в GitHub - не самый удобный вариант для полноценного проекта

Docker image - позволяет запустить почти любое приложение на почти любой ОС на почти любом железе
Система должна поддерживать контейнеризацию
+быстрая доставка приложений
+стандартизация - на любой системе команды почти одинаковые
+эффективное перемещение - при замене сервера или обновлении просто перенести проект
+безопаность(изоляция) - проект находится в изолированной среде и из него нет доступа к основному компьютеру
+экономия - можно запустить множество контейнеров на одном железе

---- Контейнер это ----
Контейнер это пакет, содержащий всё необходимое для запуска приложений
код приложения / бинарник
зависимости
системные инструменты
интерпретатор
ОС (в большинстве случаев есть, в очень урезанном виде для экономии)

Применение:
- в разработке и тестировании - тестируем в среде схожей с продом в рамках своей машины
- разворачивание приложения на сервере - в контейнере
- микромервисные системы - используют образы и контейнеры схожие с Docker. Kubernetes

---- Определения ----

Docker — это открытая платформа для разработки, доставки и эксплуатации приложений.

Docker Compose — это средство для определения и запуска приложений Docker с несколькими контейнерами.

Dockerfile — исходный файл с инструкциями, на основе которого собирается докер-образ.

Docker Image — докер-образ из которого запускается контейнер.


---- Теория ----


Для удобной и повторяемой сборки проекта на Django необходимо создать Docker-образ
и подготовить Docker-Compose конфигурацию.

Docker-образ позволяет упаковать все зависимости проекта и настройки окружения в одно место,
что упрощает его развертывание на различных средах.

Docker-Compose конфигурация позволяет описать инфраструктуру проекта, включая базу данных,
сервер приложений и другие сервисы, и управлять ими с помощью одной команды.
Это значительно упрощает установку и настройку проекта
и позволяет избежать конфликтов и ошибок при развертывании.


---- Сборка проекта ----



























